version: "3.8"

x-php: &php
  build:
    context: docker/php
    dockerfile: php.localhostelopment.dockerfile
  restart: unless-stopped
  working_dir: /srv
  volumes:
    - .:/srv
    - ~/.composer:/home/composer/.composer
    - ./vendor:/srv/vendor:delegated

services:

  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    command: >-
      --entryPoints.web.address=:80
      --entryPoints.web.http.redirections.entrypoint.to=web-secure
      --entryPoints.web.http.redirections.entrypoint.scheme=https
      --entryPoints.web-secure.address=:443
      --api=true
      --api.dashboard=true
      --providers.docker=true
      --providers.docker.exposedByDefault=false
      --providers.file.directory=/srv/configs
      --providers.file.watch=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/srv
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.services.traefik.loadBalancer.server.port=8080
    networks:
      default:
        aliases:
          - s3.docker.localhost

  php:
    <<: *php
    labels:
      - traefik.enable=true
      - traefik.http.routers.php.entryPoints=web-secure
      - traefik.http.routers.php.rule=Host(`app.docker.localhost`) || Host(`api.docker.localhost`)
      - traefik.http.routers.php.tls=true

  queue:
    <<: *php
    command: php artisan horizon

  scheduler:
    <<: *php
    command: supercronic /srv/docker/php/config/schedule.cron

  mysql:
    image: mysql:8.0-debian
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3306:3306"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data

  mailpit:
    image: axllent/mailpit:v1.12
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailpit.entryPoints=web-secure
      - traefik.http.routers.mailpit.rule=Host(`mailpit.docker.localhost`)
      - traefik.http.routers.mailpit.tls=true
      - traefik.http.services.mailpit.loadBalancer.server.port=8025

  minio:
    image: bitnami/minio:2024
    volumes:
      - minio-data:/bitnami/minio/data
      - ./traefik/tls/rootCA.pem:/usr/local/share/ca-certificates/rootCA.crt
      - ./traefik/tls/key.pem:/certs/private.key
      - ./traefik/tls/cert.pem:/certs/public.crt
    environment:
      BITNAMI_DEBUG: true
      MINIO_ROOT_USER: $AWS_ACCESS_KEY_ID
      MINIO_ROOT_PASSWORD: $AWS_SECRET_ACCESS_KEY
      MINIO_DEFAULT_BUCKETS: $AWS_BUCKET:public
      MINIO_BROWSER_REDIRECT_URL: https://minio.docker.localhost
#      MINIO_SERVER_URL: https://s3.docker.localhost
#      MINIO_USE_SSL: true
#      CONSOLE_SECURE_TLS_REDIRECT: "off"

#      MINIO_SCHEME: https
#      MINIO_SERVER_URL: https://minio.docker.localhost
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio.service=minio
      - traefik.http.routers.minio.entryPoints=web-secure
      - traefik.http.routers.minio.rule=Host(`s3.docker.localhost`)
      - traefik.http.routers.minio.tls=true
      - traefik.http.services.minio.loadBalancer.server.port=9000

      - traefik.http.routers.minio-console.service=minio-console
      - traefik.http.routers.minio-console.entryPoints=web-secure
      - traefik.http.routers.minio-console.rule=Host(`minio.docker.localhost`)
      - traefik.http.routers.minio-console.tls=true
      - traefik.http.services.minio-console.loadBalancer.server.port=9001


volumes:
  redis-data:
  mysql-data:
  minio-data:

## mc alias set mycloud https://s3.docker.localhost ...
